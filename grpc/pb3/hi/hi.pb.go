// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/hi.proto

package hi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HiReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiReq) Reset()         { *m = HiReq{} }
func (m *HiReq) String() string { return proto.CompactTextString(m) }
func (*HiReq) ProtoMessage()    {}
func (*HiReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_adad7ed3aa93a48d, []int{0}
}

func (m *HiReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiReq.Unmarshal(m, b)
}
func (m *HiReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiReq.Marshal(b, m, deterministic)
}
func (m *HiReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiReq.Merge(m, src)
}
func (m *HiReq) XXX_Size() int {
	return xxx_messageInfo_HiReq.Size(m)
}
func (m *HiReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HiReq.DiscardUnknown(m)
}

var xxx_messageInfo_HiReq proto.InternalMessageInfo

func (m *HiReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HiRsp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HiRsp) Reset()         { *m = HiRsp{} }
func (m *HiRsp) String() string { return proto.CompactTextString(m) }
func (*HiRsp) ProtoMessage()    {}
func (*HiRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_adad7ed3aa93a48d, []int{1}
}

func (m *HiRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HiRsp.Unmarshal(m, b)
}
func (m *HiRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HiRsp.Marshal(b, m, deterministic)
}
func (m *HiRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HiRsp.Merge(m, src)
}
func (m *HiRsp) XXX_Size() int {
	return xxx_messageInfo_HiRsp.Size(m)
}
func (m *HiRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_HiRsp.DiscardUnknown(m)
}

var xxx_messageInfo_HiRsp proto.InternalMessageInfo

func (m *HiRsp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HiReq)(nil), "hi.HiReq")
	proto.RegisterType((*HiRsp)(nil), "hi.HiRsp")
}

func init() { proto.RegisterFile("protos/hi.proto", fileDescriptor_adad7ed3aa93a48d) }

var fileDescriptor_adad7ed3aa93a48d = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0xcf, 0xc8, 0xd4, 0x03, 0xb3, 0x84, 0x98, 0x32, 0x32, 0xa5, 0x64, 0xd2, 0xf3,
	0xf3, 0xd3, 0x73, 0x52, 0xf5, 0x13, 0x0b, 0x32, 0xf5, 0x13, 0xf3, 0xf2, 0xf2, 0x4b, 0x12, 0x4b,
	0x32, 0xf3, 0xf3, 0x8a, 0x21, 0x2a, 0x94, 0xa4, 0xb9, 0x58, 0x3d, 0x32, 0x83, 0x52, 0x0b, 0x85,
	0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c,
	0x25, 0x45, 0xb0, 0x64, 0x71, 0x81, 0x90, 0x04, 0x17, 0x7b, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x3a,
	0x4c, 0x1e, 0xc6, 0x35, 0xb2, 0xe7, 0xe2, 0xf4, 0xc8, 0x0c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e,
	0x15, 0x32, 0xe2, 0x62, 0x0d, 0x4e, 0xac, 0xf4, 0xc8, 0x14, 0xe2, 0xd4, 0xcb, 0xc8, 0xd4, 0x03,
	0x9b, 0x2b, 0x05, 0x63, 0x16, 0x17, 0x28, 0x09, 0x37, 0x5d, 0x7e, 0x32, 0x99, 0x89, 0x57, 0x89,
	0x03, 0xe4, 0x16, 0x63, 0xfd, 0x8c, 0x4c, 0x2b, 0x46, 0x2d, 0x27, 0x8e, 0x28, 0xb6, 0x82, 0x24,
	0x10, 0x27, 0x89, 0x0d, 0xec, 0x22, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x03, 0x42,
	0x68, 0xc6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HiServiceClient is the client API for HiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HiServiceClient interface {
	SayHi(ctx context.Context, in *HiReq, opts ...grpc.CallOption) (*HiRsp, error)
}

type hiServiceClient struct {
	cc *grpc.ClientConn
}

func NewHiServiceClient(cc *grpc.ClientConn) HiServiceClient {
	return &hiServiceClient{cc}
}

func (c *hiServiceClient) SayHi(ctx context.Context, in *HiReq, opts ...grpc.CallOption) (*HiRsp, error) {
	out := new(HiRsp)
	err := c.cc.Invoke(ctx, "/hi.HiService/SayHi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HiServiceServer is the server API for HiService service.
type HiServiceServer interface {
	SayHi(context.Context, *HiReq) (*HiRsp, error)
}

// UnimplementedHiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHiServiceServer struct {
}

func (*UnimplementedHiServiceServer) SayHi(ctx context.Context, req *HiReq) (*HiRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHi not implemented")
}

func RegisterHiServiceServer(s *grpc.Server, srv HiServiceServer) {
	s.RegisterService(&_HiService_serviceDesc, srv)
}

func _HiService_SayHi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HiReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HiServiceServer).SayHi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hi.HiService/SayHi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HiServiceServer).SayHi(ctx, req.(*HiReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hi.HiService",
	HandlerType: (*HiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHi",
			Handler:    _HiService_SayHi_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/hi.proto",
}
